/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CoursesImport } from './routes/courses'

// Create Virtual Routes

const ResumesLazyImport = createFileRoute('/resumes')()
const PlannerLazyImport = createFileRoute('/planner')()
const LoginLazyImport = createFileRoute('/login')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ResumesLazyRoute = ResumesLazyImport.update({
  id: '/resumes',
  path: '/resumes',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/resumes.lazy').then((d) => d.Route))

const PlannerLazyRoute = PlannerLazyImport.update({
  id: '/planner',
  path: '/planner',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/planner.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const CoursesRoute = CoursesImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/courses': {
      id: '/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/planner': {
      id: '/planner'
      path: '/planner'
      fullPath: '/planner'
      preLoaderRoute: typeof PlannerLazyImport
      parentRoute: typeof rootRoute
    }
    '/resumes': {
      id: '/resumes'
      path: '/resumes'
      fullPath: '/resumes'
      preLoaderRoute: typeof ResumesLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/courses': typeof CoursesRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
  '/planner': typeof PlannerLazyRoute
  '/resumes': typeof ResumesLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/courses': typeof CoursesRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
  '/planner': typeof PlannerLazyRoute
  '/resumes': typeof ResumesLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/courses': typeof CoursesRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
  '/planner': typeof PlannerLazyRoute
  '/resumes': typeof ResumesLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/courses' | '/about' | '/login' | '/planner' | '/resumes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/courses' | '/about' | '/login' | '/planner' | '/resumes'
  id:
    | '__root__'
    | '/'
    | '/courses'
    | '/about'
    | '/login'
    | '/planner'
    | '/resumes'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CoursesRoute: typeof CoursesRoute
  AboutLazyRoute: typeof AboutLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  PlannerLazyRoute: typeof PlannerLazyRoute
  ResumesLazyRoute: typeof ResumesLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CoursesRoute: CoursesRoute,
  AboutLazyRoute: AboutLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  PlannerLazyRoute: PlannerLazyRoute,
  ResumesLazyRoute: ResumesLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/courses",
        "/about",
        "/login",
        "/planner",
        "/resumes"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/courses": {
      "filePath": "courses.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/planner": {
      "filePath": "planner.lazy.jsx"
    },
    "/resumes": {
      "filePath": "resumes.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
